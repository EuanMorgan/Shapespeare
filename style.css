*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
  /* Use a dark theme if possible */
  color-scheme: dark light;
}

:root {
  --body-bg: hsl(0, 0%, 13%);
}

body {
  margin: 0;
  font-family: system-ui;
  font-size: 1.25rem;
  line-height: 1.5;
  margin: 0;
  background-color: var(--body-bg);
}

.wrapper {
  max-width: 50rem;
  margin-inline: auto;
  padding-inline: 1rem;
}

.site-title {
  font-size: 3rem;
  text-align: center;
}

.section-title {
  font-size: 2.25rem;
}

section {
  padding-block: 5rem;
}

/* Shapes */

/* Two options to rotate the background but keep the text straight */
/* 1. Rotate the background then unskew the content */
/* 2. Use a pseudo element */
.diagonal {
  --skew-angle: -5deg;
  --background: linear-gradient(45deg, #12c2e9, #c471ed, #f64f59);
  position: relative;
  /* Create a stacking context to avoid
  the negative z-index from potentially dropping behind other elements */
  isolation: isolate;
}

.diagonal::after {
  content: '';
  background: var(--background);
  position: absolute;
  inset: 0;
  z-index: -1;
  transform: skewY(var(--skew-angle));
}

/* Spikes */

.spikes {
  --spike-width: 90px;
  --spike-height: 15px;
  --spike-color: var(--body-bg);
  position: relative;
  color: black;
  background: linear-gradient(to right, #fdc830, #f37335);
}

.spikes::before,
.spikes::after {
  content: '';
  position: absolute;
  width: 100%;
  height: var(--spike-height);
  background: var(--spike-color);
  /* NOTE: It is important to use preserveApsectRatio="none" on the svg itsself for this effect*/
  -webkit-mask-image: url('assets/spike.svg');
  /* Mask image works like a background-image with repeate. If the mask size is different to the size of the parent then it will repeat to fill it */
  -webkit-mask-size: var(--spike-width) var(--spike-height);

  mask-image: url('assets/spike.svg');
  mask-size: var(--spike-width) var(--spike-height);
}

/* Stick to top / bottom */
.spikes::before {
  top: 0;
}
/* Note: It is possible to encounter sub-pixel rendering issues when zooming in or out with the browser because we've used a transform. We could make a seaparate SVG for the top and bottom pieces to avoid needing to rotate. */
.spikes::after {
  bottom: 0;
  transform: rotate(0.5turn);
}

/* Image mask clip path */
/* In Chrome mask-image has to be prefixed still */
